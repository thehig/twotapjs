
045 Advanced Click Behaviors
 ☐ Multiple selections from single list
 ☐ Proper clearing and repopulating of the observableValues collection
 ☐ Implementation of a BindableObject wrapper function? (Similar to the newObservableList function)
 
050 Quantity Special Click
 ☐ Add quantity values in the library instead of the client (Click event will error without SelectOneModelOption)
 ☐ Add click behavior for the quantity special case

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
 ✔ Consider "selected" behaviours (ie retaining previous selected options) @done (16-06-21 17:32)
 ✔ Bind function to click events @done (16-06-21 17:32)
 ✔ Add function to product for selecting opton and updating binding lists @done (16-06-21 17:32)
 ✔ Add reference in select one model to product model @done (16-06-17 12:27)
 ✔ Add empty binding lists to product @done (16-06-17 12:27)
 ✔ Iterate through the items and create complete data lists @done (16-05-23 16:09)
 ✔ Get the required_field_names and create new binding lists with the same names @done (16-05-23 16:09)
 ✔ Bind the option 1 list into the option 1 binding list @done (16-05-23 16:09)
 ✔ Get a ProductDataModel with at least 2 options @done (16-05-23 14:03)
 ✔ Mapping the nested required fields @done (16-04-28 15:05)
 ✔ Add more product fixtures to check a wide variety of products @done (16-04-28 15:05)
 ✔ Add MORE products @done (16-04-28 15:05)
 ✔ Spec File @done (16-04-28 15:04)
 ✔ Source File @done (16-04-28 15:04)
 ✔ Linking @done (16-04-28 15:04)
 ✔ Create boilerplate for the CartModel @done (16-04-28 15:04)
 ✔ Detect unrecognised properties @done (16-04-22 13:51)
 ✔ Require properties on the other data models @done (16-04-22 12:29)
 ✔ Determine if we should have requirements on additional properties of products @done (16-04-22 12:28)
 ✔ Add errors to SelectOneModel and SelectOneModelOption @done (16-04-22 12:28)
 ✔ Generate additional useful errors @done (16-04-22 12:17)
 ✔ Errors only generated by unrecognised input_type & input_name @done (16-04-22 12:17)
 ✔ Run all fixtures through the DataProvider and see who throws errors @done (16-04-22 12:08)
 ✔ Require list.all_array @done (16-04-22 12:08)
 ✔ Output any errors @done (16-04-22 12:08)
 ✔ Create 005.all_fixtures.spec.coffee @done (16-04-22 12:08)
 ✔ Add Sample.setProducts to set array of values to be returned @done (16-04-22 12:08)
 ✔ Load folder of fixtures into an array @done (16-04-22 11:32)
 ✘ If not in a module.exports, should just load object @cancelled (16-04-22 11:16)
 ✔ If a module.exports returns an array, flatten that out for the all_array @done (16-04-22 11:16)
 ✔ https://github.com/SublimeText/Origami#keyboard-shortcuts @done (16-04-21 23:27)
 ✔ Renamed 005 spec to `coffee util.list-fixtures.coffee` @done (16-04-21 23:24)
 ✔ Created 005 spec file. Run directly with coffee. No real assertions yet @done (16-04-21 23:14)
 ✔ Create fixtures @done (16-04-21 22:53)
 ✔ https://github.com/aziz/PlainTasks  @done (16-04-21 22:52)
 ✔  Already have the specs/unit/fixtures directory @done (16-04-21 22:51)
 ✔ Remind self on how to use 
